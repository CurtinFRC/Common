plugins {
    id "edu.wpi.first.GradleRIO" version "2019.0.0-alpha-1" apply false
}

// Only clean our code, don't clean googletest
task subclean();

subprojects {
    plugins.withType(CppPlugin).whenPluginAdded {
        project.apply plugin: "visual-studio"
        rootProject.tasks.subclean.dependsOn tasks.clean
    }
    plugins.withType(GoogleTestPlugin).whenPluginAdded {
        model {
            binaries {
                withType(GoogleTestTestSuiteBinarySpec) {
                    if (targetPlatform.name == 'roborio') buildable = false;    // Don't test on a platform we can't run
                    else {
                        lib project: ":", library: "googleTest", linkage: "static"
                    }
                }
                all {
                    if (toolChain instanceof VisualCpp) {
                        cppCompiler.args << "/FS"
                    } else {
                        linker.args << "-pthread"
                    }
                }
            }
        }
    }
}

apply plugin: "edu.wpi.first.GradleRIO"
apply plugin: "cpp"

model {
    components {
        // G Test is build along with the project, but you could easily use your own prebuilt libraries.
        googleTest(NativeLibrarySpec) {
            targetPlatform 'desktop'

            sources.cpp {
                source {
                    srcDir 'googletest/googletest/src'
                    include '**/gtest-all.cc'
                }
                exportedHeaders {
                    srcDirs 'googletest/googletest', 'googletest/googletest/include'
                    include '**/*.hpp', '**/*.h'
                }
            }
        }
    }
}

task visualStudio() {
    dependsOn ':robot:frcUserProgramVisualStudio'
    dependsOn ':subsystems:subsystemsVisualStudio'
}

wrapper {
    gradleVersion = '4.8.1'
}