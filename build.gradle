plugins {
    id "jaci.openrio.gradle.GradleRIO" version "2018.01.20" apply false
}

// Only clean our code, don't clean googletest
task subclean();

subprojects {
    plugins.withType(CppPlugin).whenPluginAdded {
        project.apply plugin: "visual-studio"
        rootProject.tasks.subclean.dependsOn tasks.clean
    }
    plugins.withType(GoogleTestPlugin).whenPluginAdded {
        model {
            binaries {
                withType(GoogleTestTestSuiteBinarySpec) {
                    lib project: ":", library: "googleTest", linkage: "static"
                    if (targetPlatform.name == 'roborio') buildable = false;    // Don't test on a platform we can't run
                }
            }
        }
    }
}

apply plugin: "jaci.openrio.gradle.GradleRIO"
apply plugin: "cpp"

model {
    components {
        // G Test is build along with the project, but you could easily use your own prebuilt libraries.
        googleTest(NativeLibrarySpec) {
            targetPlatform 'any64'

            sources.cpp {
                source {
                    srcDir 'googletest/googletest/src'
                    include '**/gtest-all.cc'
                }
                exportedHeaders {
                    srcDirs 'googletest/googletest', 'googletest/googletest/include'
                    include '**/*.hpp', '**/*.h'
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}

task visualStudio() {
    dependsOn ':robot:frcUserProgramVisualStudio'
    dependsOn ':subsystems:subsystemsVisualStudio'
}